#!/bin/bash

DATA_DIR="pokemon_data_parallel"
ERROR_FILE="errors_parallel.txt"

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

mkdir -p "$DATA_DIR"
> "$ERROR_FILE"

# Function to fetch a single Pokémon
fetch_pokemon() {
  pokemon=$1
  echo "Fetching data for $pokemon..."

  response=$(curl -s -w "%{http_code}" -o "${DATA_DIR}/${pokemon}.json" "https://pokeapi.co/api/v2/pokemon/${pokemon}")

  if [ "$response" -eq 200 ]; then
    echo "Saved data to ${DATA_DIR}/${pokemon}.json ✅"
  else
    echo "❌ Failed to fetch data for $pokemon (HTTP $response)" >> "$ERROR_FILE"
  fi
}

# Array to track background PIDs
pids=()

# Start all background jobs
for pokemon in "${POKEMONS[@]}"; do
  fetch_pokemon "$pokemon" &
  pids+=($!)  # Store each PID
done

# Wait for all background jobs
for pid in "${pids[@]}"; do
  if wait "$pid"; then
    echo "Process $pid completed successfully."
  else
    echo "Process $pid failed. Terminating..."
    kill "$pid" 2>/dev/null
  fi
done

echo ""
echo "✅ All parallel fetches completed. Check $ERROR_FILE for any errors."
